services:
  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: src/API/Dockerfile
    depends_on:
      - sqlserver
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: "0.5" 
          memory: 512M 
        reservations:
          cpus: "0.2"
          memory: 256M
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest  # SQL Server image (with Express edition)
    container_name: sql_server_express
    environment:
      - ACCEPT_EULA=Y  # Accept the End User License Agreement
      - SA_PASSWORD=YourStrong!Passw0rd  # Set the System Administrator (SA) password
      - MSSQL_PID=Developer  # Specify the SQL Server Express edition
    ports:
      - "1433:1433"  # Expose port 1433 for SQL Server
    volumes:
      - sql_data:/var/opt/mssql  # Persist database data between container restarts
    networks:
      - mynetwork
    restart: unless-stopped  # Automatically restart unless stopped manually
    deploy:
      resources:
          limits:
            cpus: "2"        # Allow SQL Server to use up to 2 CPU cores
            memory: 4G       # Allow up to 4GB RAM (if available on host)
          reservations:
            cpus: "1"        # Reserve 1 core so it gets enough CPU time
            memory: 2G       # Reserve 2GB memory to avoid starving under load
volumes:
  sql_data:
    driver: local  # Use a local driver for data persistence

networks:
  mynetwork:
    driver: bridge  # Use a bridge network for the SQL Server container