-- =============================================
-- Create Table: staff_request
-- =============================================
CREATE TABLE IF NOT EXISTS staff_request (
    id SERIAL PRIMARY KEY,
    tenant_id INT NOT NULL REFERENCES tenant(id) ON DELETE CASCADE,
    requested_email VARCHAR(255) NOT NULL,
    requested_name VARCHAR(255) NOT NULL,
    requested_by_sso_id VARCHAR(100) NOT NULL,
    status INT NOT NULL DEFAULT 0, -- 0=Pending, 1=Accepted, 2=Rejected
    accepted_at TIMESTAMPTZ,
    accepted_by_sso_id VARCHAR(100),
    rejection_reason TEXT,
    
    created TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by VARCHAR(100),
    last_modified TIMESTAMPTZ,
    last_modified_by VARCHAR(100)
);

-- =============================================
-- Create Table: staff_request_role
-- =============================================
CREATE TABLE IF NOT EXISTS staff_request_role (
    id SERIAL PRIMARY KEY,
    tenant_id INT NOT NULL REFERENCES tenant(id) ON DELETE CASCADE,
    staff_request_id INT NOT NULL REFERENCES staff_request(id) ON DELETE CASCADE,
    role VARCHAR(100) NOT NULL,
    
    created TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by VARCHAR(100),
    last_modified TIMESTAMPTZ,
    last_modified_by VARCHAR(100)
);

-- Add indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_staff_request_tenant_id ON staff_request(tenant_id);
CREATE INDEX IF NOT EXISTS idx_staff_request_status ON staff_request(status);
CREATE INDEX IF NOT EXISTS idx_staff_request_email ON staff_request(requested_email);
CREATE INDEX IF NOT EXISTS idx_staff_request_requested_by ON staff_request(requested_by_sso_id);
CREATE INDEX IF NOT EXISTS idx_staff_request_role_tenant_id ON staff_request_role(tenant_id);
CREATE INDEX IF NOT EXISTS idx_staff_request_role_staff_request_id ON staff_request_role(staff_request_id); 